{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Category.js","webpack:///./components/Project.js","webpack:///./pages/index.js","webpack:///./style.css","webpack:///./util/service.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"next/link\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import Link from 'next/link'\nimport React, { Component } from 'react'\nimport 'isomorphic-fetch'\n\nimport Project from './Project.js'\n\nimport css from '../style.css'\nconst API = 'http://localhost:4000/graphql'\n\nexport default class Category extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      draggedProject: null,\n      fromCategoryId: ''\n    }\n  }\n  render() {\n    const { category, onDrop, removeProject } = this.props\n\n    return (\n      <div\n        className={css.item}\n        key={category.id}\n        onDragOver={e => e.preventDefault()}\n        onDrop={e => onDrop(e, category.id)}\n      >\n        <div className={css.categoryName}>{category.name}</div>\n        {category.projects.map(project => (\n          <Project\n            key={project.id}\n            project={project}\n            categoryId={category.id}\n            removeProject={removeProject}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\n// I could have used optimized rendering where I get all the categories from the back-end and update the state accordingly.\n","import React, { Component } from 'react'\nimport 'isomorphic-fetch'\n\nconst API = 'http://localhost:4000/graphql'\nimport css from '../style.css'\n\nexport default class Project extends Component {\n  dragStart = (e, draggedProject, fromCategoryId) => {\n    e.dataTransfer.setData('fromCategoryId', fromCategoryId)\n    e.dataTransfer.setData('draggedProject', JSON.stringify(draggedProject))\n  }\n\n  render() {\n    const { project, categoryId, removeProject } = this.props\n\n    return (\n      <div\n        className={css.project}\n        key={project.id || project.title}\n        draggable\n        onDragStart={e => this.dragStart(e, project, categoryId)}\n      >\n        <div className={css.projectTitle}>\n          <span>{project.title}</span>\n          <span\n            onClick={() => removeProject(categoryId, project.id)}\n            className={css.removeProject}\n          >\n            x\n          </span>\n        </div>\n        <div className={css.projectDesc}>{project.description}</div>\n      </div>\n    )\n  }\n}\n\n// I could have used optimized rendering where I get all the categories from the back-end and update the state accordingly.\n","import React, { Component } from 'react'\nimport 'isomorphic-fetch'\n\nimport css from '../style.css'\nimport Category from '../components/Category.js'\nimport fetchFromGraphql from '../util/service'\nconst API = 'http://localhost:4000/graphql'\n\nexport default class ManagementSystem extends Component {\n  static async getInitialProps() {\n    const query = `{\n      allCategories {\n        id\n        name\n        projects {\n          title\n          description\n          id\n        }\n      }\n    }`\n    return fetchFromGraphql(query)\n  }\n\n  constructor() {\n    super()\n    this.state = {\n      categories: [],\n      title: '',\n      desc: ''\n    }\n  }\n\n  componentWillMount = () => {\n    this.setState({ categories: this.props.allCategories })\n  }\n\n  onDrop = (e, targetCategoryId) => {\n    const fromCategoryId = e.dataTransfer.getData('fromCategoryId')\n    const draggedProject = JSON.parse(e.dataTransfer.getData('draggedProject'))\n\n    const categories = this.state.categories.slice()\n    if (targetCategoryId === fromCategoryId) return\n\n    // To category..\n    let targetCategory = []\n    let targetCategoryIndex = -1\n    categories.forEach((category, index) => {\n      if (category.id === targetCategoryId) {\n        targetCategory = category\n        targetCategoryIndex = index\n      } else if (fromCategoryId === category.id) {\n        category.projects = category.projects.filter(\n          project => project.id !== draggedProject.id\n        )\n      }\n    })\n\n    targetCategory.projects.push(draggedProject)\n    categories.splice(targetCategoryIndex, 1, targetCategory)\n    this.setState({ categories })\n\n    this.updateDB({\n      fromCategoryId,\n      toCategoryId: targetCategoryId,\n      projectId: draggedProject.id\n    })\n  }\n\n  updateDB = async ({ fromCategoryId, toCategoryId, projectId }) => {\n    const query = `\n      mutation  MoveProject($input: MoveProjectInput) {\n          moveProject(input: $input)\n          {\n            id\n            name\n            projects {\n              title\n              id\n            }\n          }\n         }\n    `\n    const data = await fetchFromGraphql(query, {\n      fromCategoryId,\n      toCategoryId,\n      projectId\n    })\n\n    console.log(data)\n  }\n\n  removeProject = async (categoryId, projectId) => {\n    const query = `\n    mutation  RemoveProject($input: RemoveProjectInput) {\n        removeProject(input: $input) {\n            title\n            id\n            description\n        }\n    }\n  `\n    const data = await fetchFromGraphql(query, {\n      id: categoryId,\n      projectId\n    })\n    console.log(data)\n\n    if (data) {\n      const categories = this.state.categories.slice()\n      categories.forEach((category, index) => {\n        if (category.id === categoryId) {\n          category.projects = category.projects.filter(\n            project => project.id !== projectId\n          )\n        }\n      })\n      this.setState({ categories })\n    }\n  }\n\n  handleChange(event, type) {\n    this.setState({ [type]: event.target.value })\n  }\n\n  addProject = async e => {\n    e.preventDefault()\n    const { title, desc } = this.state\n    if (title && desc) {\n      const query = `\n    mutation  SetProject($input: SetProjectInput) {\n        setProject(input: $input) {\n          id\n          name\n          projects {\n            id\n            title\n            description\n          }\n        }\n    }\n  `\n\n      const data = await fetchFromGraphql(query, {\n        title,\n        description: desc,\n        id: this.state.categories[0].id\n      })\n\n      this.setState({ categories: data.setProject, title: '', desc: '' })\n    } else {\n      alert('Please, add title or description.')\n    }\n  }\n\n  render() {\n    const { categories } = this.state\n\n    const allCategories = categories.map(category => (\n      <Category\n        key={category.id}\n        category={category}\n        onDrop={this.onDrop}\n        removeProject={this.removeProject}\n      />\n    ))\n\n    return (\n      <div>\n        <div className={css.container}>\n          {allCategories.length > 0\n            ? allCategories\n            : 'Please Add Categories first!'}\n        </div>\n        {allCategories.length > 0 ? (\n          <form onSubmit={this.addProject} className={css.addProject}>\n            <input\n              type=\"text\"\n              placeholder={'Title'}\n              value={this.state.title}\n              onChange={e => this.handleChange(e, 'title')}\n            />\n            <textarea\n              type=\"text\"\n              placeholder={'Description'}\n              value={this.state.desc}\n              onChange={e => this.handleChange(e, 'desc')}\n            />\n            <input type=\"submit\" value=\"Add Project\" />\n          </form>\n        ) : null}\n      </div>\n    )\n  }\n}\n\n// I could have used optimized rendering where I get all the categories from the back-end and update the state accordingly.\n\n// Let user select which category instead of hard coding the inserting (id: this.state.categories[0].id)\n","module.exports = {\n\t\"container\": \"RX7MVaJTvfI0d1TLV5iSh\",\n\t\"item\": \"_2YYvHDUSRNGCkUj-mVwZhA\",\n\t\"categoryName\": \"xf2CNVnpIpLIYnm-TtbUA\",\n\t\"project\": \"_3nkArgLMY9XmvNlT0c9Rc_\",\n\t\"projectTitle\": \"_1BSiRWE8MFILM4yLT5sq4c\",\n\t\"removeProject\": \"_3A-F62uFg3pPiCnQqqRnrM\",\n\t\"projectDesc\": \"_3s0WPv16tlUgKIQY26t0ZT\",\n\t\"addProject\": \"_1B11RRH1Pa9nUY19GI0Erj\"\n};","const API = 'http://localhost:4000/graphql'\nimport 'isomorphic-fetch'\n\nconst fetchFromGraphql = async (query, variables = {}) => {\n  const res = await fetch(API, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    },\n    body: JSON.stringify({\n      query,\n      variables: {\n        input: {\n          ...variables\n        }\n      }\n    })\n  })\n\n  const { data } = await res.json()\n\n  return data\n}\n\nexport default fetchFromGraphql\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"isomorphic-fetch\");","module.exports = require(\"next/link\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAHA;AAOA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;;;;AA9BA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA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","sourceRoot":""}