{"version":3,"file":"static/webpack/static/development/pages/index.js.8c9739bee07253bf4577.hot-update.js","sources":["webpack:///./components/Project.js"],"sourcesContent":["import Link from 'next/link'\nimport React, { Component } from 'react'\nimport 'isomorphic-fetch'\n\nimport Layout from '../components/layout.js'\nimport css from '../style.css'\nconst API = 'http://localhost:4000/graphql'\n\nexport default class Project extends Component {\n  //   updateDB = async ({ fromCategoryId, toCategoryId, projectId }) => {\n  //     const query = `{\n  //       mutation {\n  //         moveProject(fromCategoryId: ${fromCategoryId}, toCategoryId: ${toCategoryId}, projectId: ${projectId}) {\n  //           id\n  //           name\n  //           projects {\n  //             title\n  //             description\n  //             id\n  //           }\n  //         }\n  //       }\n  //     }`\n\n  //     // fetch(API, {\n  //     //   method: 'POST'\n  //     // })\n\n  //     console.log(this.state)\n  //   }\n\n  dragStart = (e, draggedProject, fromCategoryId) => {\n    e.dataTransfer.setData('fromCategoryId', fromCategoryId)\n    e.dataTransfer.setData('draggedProject', JSON.stringify(draggedProject))\n  }\n\n  removeProject = id => {\n    console.log('Remove: ', id)\n  }\n\n  render() {\n    const { project, categoryId } = this.props\n\n    return (\n      <div\n        className={css.project}\n        key={project.id || project.title}\n        draggable\n        onDragStart={e => this.dragStart(e, project, categoryId)}\n      >\n        <div className={css.projectTitle}>\n          <span>{project.title}</span>\n          <span\n            onClick={() => this.removeProject(project.id)}\n            className={css.removeProject}\n          >\n            x\n          </span>\n        </div>\n        <div className={css.projectDesc}>{project.description}</div>\n      </div>\n    )\n  }\n}\n\n// I could have used optimized rendering where I get all the categories from the back-end and update the state accordingly.\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAtDA;AACA;AACA;;;;;A","sourceRoot":""}