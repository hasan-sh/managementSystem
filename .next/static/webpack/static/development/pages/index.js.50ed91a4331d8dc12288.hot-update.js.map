{"version":3,"file":"static/webpack/static/development/pages/index.js.50ed91a4331d8dc12288.hot-update.js","sources":["webpack:///./components/Project.js"],"sourcesContent":["import Link from 'next/link'\nimport React, { Component } from 'react'\nimport 'isomorphic-fetch'\n\nconst API = 'http://localhost:4000/graphql'\nimport css from '../style.css'\n\nexport default class Project extends Component {\n  dragStart = (e, draggedProject, fromCategoryId) => {\n    e.dataTransfer.setData('fromCategoryId', fromCategoryId)\n    e.dataTransfer.setData('draggedProject', JSON.stringify(draggedProject))\n  }\n\n  removeProject = async (categoryId, projectId) => {\n    const query = `\n    mutation  RemoveProject($input: RemoveProjectInput) {\n        removeProject(input: $input) {\n            title\n            id\n            description\n        }\n    }\n  `\n    const res = await fetch(API, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        query,\n        variables: {\n          input: {\n            id: categoryId,\n            projectId\n          }\n        }\n      })\n    })\n\n    const { data } = await res.json()\n    console.log(data)\n  }\n\n  render() {\n    const { project, categoryId } = this.props\n\n    return (\n      <div\n        className={css.project}\n        key={project.id || project.title}\n        draggable\n        onDragStart={e => this.dragStart(e, project, categoryId)}\n      >\n        <div className={css.projectTitle}>\n          <span>{project.title}</span>\n          <span\n            onClick={() => this.removeProject(categoryId, project.id)}\n            className={css.removeProject}\n          >\n            x\n          </span>\n        </div>\n        <div className={css.projectDesc}>{project.description}</div>\n      </div>\n    )\n  }\n}\n\n// I could have used optimized rendering where I get all the categories from the back-end and update the state accordingly.\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAWA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAFA;AANA;AACA;AAXA;AAUA;AAVA;AAAA;AACA;AADA;AAAA;AA2BA;AACA;AACA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AA8BA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA3DA;AACA;AACA;;;;;A","sourceRoot":""}